kafka-producer {
    client-id = "kafka-producer-client"
    bootstrap-servers = "broker-1.rtd-ext.kafka.entur.io:9093,broker-2.rtd-ext.kafka.entur.io:9093,broker-3.rtd-ext.kafka.entur.io:9093"
    schema-registry-url = "http://schema-registry.rtd-ext.kafka.entur.io"
    security-protocol = "SASL_SSL"
    sasl {
        mechanism = "SCRAM-SHA-512"
        jaas-username = ${?PRODUCER_CLIENT_USERNAME}
        jaas-password = ${?PRODUCER_CLIENT_PASSWORD}
    }
    ssl {
        truststore-location = ${?SSL_TRUSTSTORE_LOCATION}
        truststore-password = ${?SSL_TRUSTSTORE_PASSWORD}
    }
}

kafka-consumer {
    client-id = "kafka-consumer-client"
    bootstrap-servers = "broker-1.rtd-ext.kafka.entur.io:9093,broker-2.rtd-ext.kafka.entur.io:9093,broker-3.rtd-ext.kafka.entur.io:9093"
    schema-registry-url = "http://schema-registry.rtd-ext.kafka.entur.io"
    security-protocol = "SASL_SSL"
    sasl {
        mechanism = "SCRAM-SHA-512"
        jaas-username = ${?CONSUMER_CLIENT_USERNAME}
        jaas-password = ${?CONSUMER_CLIENT_PASSWORD}
    }
    ssl {
        truststore-location = ${?SSL_TRUSTSTORE_LOCATION}
        truststore-password = ${?SSL_TRUSTSTORE_PASSWORD}
    }
}

kafka-admin {
    client-id = "kafka-admin-client"
    bootstrap-servers = "broker-1.rtd-ext.kafka.entur.io:9093,broker-2.rtd-ext.kafka.entur.io:9093,broker-3.rtd-ext.kafka.entur.io:9093"
    schema-registry-url = "http://schema-registry.rtd-ext.kafka.entur.io"
    security-protocol = "SASL_SSL"
    sasl {
        mechanism = "SCRAM-SHA-512"
        jaas-username = ${?ADMIN_CLIENT_USERNAME}
        jaas-password = ${?ADMIN_CLIENT_PASSWORD}
    }
    ssl {
        truststore-location = ${?SSL_TRUSTSTORE_LOCATION}
        truststore-password = ${?SSL_TRUSTSTORE_PASSWORD}
    }
}